[INFO ] 2020-01-20T16:30:56,205Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/ericmcevoy/bootcamp_bootcamp/workflows ... {}
[INFO ] 2020-01-20T16:30:56,458Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-20T16:30:57,894Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-20T16:30:58,834Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-01-20T16:30:58,853Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-20T16:30:58,854Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-20T16:31:00,197Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-20T16:31:00,231Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-01-20T16:31:00,827Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-20T16:31:00,827Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-20T16:31:00,827Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-01-20T16:31:01,025Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-20T16:31:01,036Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-20T16:31:01,673Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-01-20T16:31:02,090Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-20T16:31:02,102Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-20T16:31:02,113Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-20T16:31:02,113Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-20T16:31:02,113Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-20T16:31:03,657Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-20T16:31:03,657Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-01-20T16:31:03,680Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-20T16:31:03,680Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-01-20T16:31:03,734Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-20T16:31:03,734Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-20T16:31:03,855Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:03,915Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-20T16:31:04,026Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-01-20T16:31:04,170Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-20T16:31:04,171Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-01-20T16:31:04,216Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-20T16:31:04,294Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-01-20T16:31:04,294Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-20T16:31:04,385Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:04,395Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-01-20T16:31:04,406Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:04,407Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-01-20T16:31:04,419Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:04,419Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,465Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,598Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,599Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,653Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,654Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,654Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,654Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,654Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,654Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,654Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,655Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,655Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,655Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-20T16:31:04,655Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:04,686Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:04,686Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-01-20T16:31:04,711Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:04,722Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-20T16:31:04,791Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-01-20T16:31:05,012Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-20T16:31:05,012Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-01-20T16:31:05,023Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-20T16:31:05,034Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-01-20T16:31:05,034Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-20T16:31:05,065Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:05,065Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-01-20T16:31:05,099Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:05,100Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-01-20T16:31:05,101Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:05,102Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,102Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,269Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,269Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,269Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,270Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,270Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,280Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:05,281Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-01-20T16:31:07,601Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-20T16:31:07,612Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-20T16:31:07,612Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-01-20T16:31:07,612Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-20T16:31:07,623Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-20T16:31:07,633Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/ericmcevoy/bootcamp_bootcamp/.gradle {}
[INFO ] 2020-01-20T16:31:07,633Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-20T16:31:07,663Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-01-20T16:31:07,997Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163049.932/nodes/0/cordapps] {}
[INFO ] 2020-01-20T16:31:08,001Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:08,024Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:08,124Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:09,252Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:09,334Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:09,341Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:09,561Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:30:49.873Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:16,553Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:16,558Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163049.932/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:16,558Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:16,632Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:16,838Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:16,852Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:19,919Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:20,656Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:20,658Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:20,662Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:20,662Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:20,749Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:20,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:20,825Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:20,825Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:21,191Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:21,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:21,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:21,213Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:21,404Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:21,490Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:21,536Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:21,598Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:21,657Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:21,664Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-20T16:31:21,667Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-20T16:31:22,241Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:22,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:22,263Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:22,264Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:22,264Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:22,281Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163049.932/nodes/1/cordapps] {}
[INFO ] 2020-01-20T16:31:22,281Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:22,281Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:22,288Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/1/cordapps/workflows-0.1.jar {}
[WARN ] 2020-01-20T16:31:22,297Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Nasdaq CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-01-20T16:31:22,298Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Nasdaq CorDapp, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[INFO ] 2020-01-20T16:31:22,333Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:22,385Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:22,385Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:22,389Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:30:49.873Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:23,118Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,123Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163049.932/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,123Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,172Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,180Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,404Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,418Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,419Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,421Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,421Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,558Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:23,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:23,576Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:23,576Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:23,813Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:23,815Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:23,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:23,840Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:23,848Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:23,869Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:23,898Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:23,909Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:23,923Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:23,997Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:24,006Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:24,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:24,012Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:24,032Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:24,034Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:24,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:24,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:24,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:24,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:24,051Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163049.932/nodes/2/cordapps] {}
[INFO ] 2020-01-20T16:31:24,051Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:24,052Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:24,057Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163049.932/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:24,079Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:24,099Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:24,099Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:24,102Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:30:49.873Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:24,812Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:24,815Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163049.932/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:24,815Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:24,842Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:24,846Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:24,846Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,220Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,231Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,238Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,242Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,242Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,444Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:25,453Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:25,456Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:25,456Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:25,694Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:25,696Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:25,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:25,716Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,718Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:25,726Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,739Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:25,747Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,758Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:25,867Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:25,876Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537881203) {}
[INFO ] 2020-01-20T16:31:25,880Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:25,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,893Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:25,911Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537883840) {}
[INFO ] 2020-01-20T16:31:25,914Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:25,926Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,927Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:25,964Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,964Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:25,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537885716) {}
[INFO ] 2020-01-20T16:31:25,966Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-20T16:31:26,926Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=869559d3-656f-49bd-aa2e-b86410cadbe9, invocation_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, invocation_timestamp=2020-01-20T16:31:26.093Z, origin=Only For Testing, session_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, session_timestamp=2020-01-20T16:31:26.093Z, thread-id=285}
[WARN ] 2020-01-20T16:31:26,926Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.bootcamp.day1.contracts.AssetContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=869559d3-656f-49bd-aa2e-b86410cadbe9, invocation_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, invocation_timestamp=2020-01-20T16:31:26.093Z, origin=Only For Testing, session_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, session_timestamp=2020-01-20T16:31:26.093Z, thread-id=285}
[INFO ] 2020-01-20T16:31:28,740Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=869559d3-656f-49bd-aa2e-b86410cadbe9, invocation_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, invocation_timestamp=2020-01-20T16:31:26.093Z, origin=Only For Testing, session_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, session_timestamp=2020-01-20T16:31:26.093Z, thread-id=285, tx_id=20D3F3D293F93A66CA4DA2AC17995D19424B095A7CCCD6C0925ADA3A6B840894}
[INFO ] 2020-01-20T16:31:28,740Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=869559d3-656f-49bd-aa2e-b86410cadbe9, invocation_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, invocation_timestamp=2020-01-20T16:31:26.093Z, origin=Only For Testing, session_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, session_timestamp=2020-01-20T16:31:26.093Z, thread-id=285, tx_id=20D3F3D293F93A66CA4DA2AC17995D19424B095A7CCCD6C0925ADA3A6B840894}
[INFO ] 2020-01-20T16:31:28,855Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=869559d3-656f-49bd-aa2e-b86410cadbe9, invocation_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, invocation_timestamp=2020-01-20T16:31:26.093Z, origin=Only For Testing, session_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, session_timestamp=2020-01-20T16:31:26.093Z, thread-id=285, tx_id=20D3F3D293F93A66CA4DA2AC17995D19424B095A7CCCD6C0925ADA3A6B840894}
[INFO ] 2020-01-20T16:31:28,856Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=869559d3-656f-49bd-aa2e-b86410cadbe9, invocation_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, invocation_timestamp=2020-01-20T16:31:26.093Z, origin=Only For Testing, session_id=52fdf343-e584-4079-b2e6-a826fb0c60e3, session_timestamp=2020-01-20T16:31:26.093Z, thread-id=285, tx_id=20D3F3D293F93A66CA4DA2AC17995D19424B095A7CCCD6C0925ADA3A6B840894}
[INFO ] 2020-01-20T16:31:29,215Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=6503d476-a7da-427b-a650-7a2dacd6ed00, invocation_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, invocation_timestamp=2020-01-20T16:31:29.140Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, session_timestamp=2020-01-20T16:31:29.140Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,373Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=6503d476-a7da-427b-a650-7a2dacd6ed00, invocation_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, invocation_timestamp=2020-01-20T16:31:29.140Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, session_timestamp=2020-01-20T16:31:29.140Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,502Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=defcb5bd-d125-4c1f-bb2e-e9086ce5cc89, invocation_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, invocation_timestamp=2020-01-20T16:31:28.944Z, origin=Only For Testing, session_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, session_timestamp=2020-01-20T16:31:28.944Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,607Z [Mock network] corda.flow. - Received a notarisation request for Tx [C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000004, flow-id=148c8893-4fd2-45f0-916c-7cbabc1167eb, invocation_id=7e877567-2422-4d0c-9d0b-bd02eccddc0f, invocation_timestamp=2020-01-20T16:31:29.589Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e877567-2422-4d0c-9d0b-bd02eccddc0f, session_timestamp=2020-01-20T16:31:29.589Z, thread-id=285}
[INFO ] 2020-01-20T16:31:29,705Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [20D3F3D293F93A66CA4DA2AC17995D19424B095A7CCCD6C0925ADA3A6B840894(0)]. TxId: C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4 {}
[INFO ] 2020-01-20T16:31:29,711Z [Mock network] corda.flow. - Transaction [C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000004, flow-id=148c8893-4fd2-45f0-916c-7cbabc1167eb, invocation_id=7e877567-2422-4d0c-9d0b-bd02eccddc0f, invocation_timestamp=2020-01-20T16:31:29.589Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e877567-2422-4d0c-9d0b-bd02eccddc0f, session_timestamp=2020-01-20T16:31:29.589Z, thread-id=285}
[INFO ] 2020-01-20T16:31:29,760Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=defcb5bd-d125-4c1f-bb2e-e9086ce5cc89, invocation_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, invocation_timestamp=2020-01-20T16:31:28.944Z, origin=Only For Testing, session_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, session_timestamp=2020-01-20T16:31:28.944Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,761Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=defcb5bd-d125-4c1f-bb2e-e9086ce5cc89, invocation_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, invocation_timestamp=2020-01-20T16:31:28.944Z, origin=Only For Testing, session_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, session_timestamp=2020-01-20T16:31:28.944Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,849Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=defcb5bd-d125-4c1f-bb2e-e9086ce5cc89, invocation_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, invocation_timestamp=2020-01-20T16:31:28.944Z, origin=Only For Testing, session_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, session_timestamp=2020-01-20T16:31:28.944Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,872Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=6503d476-a7da-427b-a650-7a2dacd6ed00, invocation_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, invocation_timestamp=2020-01-20T16:31:29.140Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, session_timestamp=2020-01-20T16:31:29.140Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,880Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=6503d476-a7da-427b-a650-7a2dacd6ed00, invocation_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, invocation_timestamp=2020-01-20T16:31:29.140Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, session_timestamp=2020-01-20T16:31:29.140Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,891Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=6503d476-a7da-427b-a650-7a2dacd6ed00, invocation_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, invocation_timestamp=2020-01-20T16:31:29.140Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, session_timestamp=2020-01-20T16:31:29.140Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,899Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=6503d476-a7da-427b-a650-7a2dacd6ed00, invocation_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, invocation_timestamp=2020-01-20T16:31:29.140Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c6b4dd5-6f94-40eb-bea7-a67f6fde3b60, session_timestamp=2020-01-20T16:31:29.140Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,911Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=defcb5bd-d125-4c1f-bb2e-e9086ce5cc89, invocation_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, invocation_timestamp=2020-01-20T16:31:28.944Z, origin=Only For Testing, session_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, session_timestamp=2020-01-20T16:31:28.944Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:29,911Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=defcb5bd-d125-4c1f-bb2e-e9086ce5cc89, invocation_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, invocation_timestamp=2020-01-20T16:31:28.944Z, origin=Only For Testing, session_id=e235a725-7a37-4c11-9a04-c8b76ff3a76b, session_timestamp=2020-01-20T16:31:28.944Z, thread-id=285, tx_id=C56F41FCF6EE751303E8B3FD382B46F41F7B4EEC7AF6B4D5B4A4B2EE0109B8E4}
[INFO ] 2020-01-20T16:31:30,020Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163129.947/nodes/0/cordapps] {}
[INFO ] 2020-01-20T16:31:30,020Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:30,020Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:30,026Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:30,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:30,101Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:30,101Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:30,110Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:29.946Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:30,776Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:30,780Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163129.947/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:30,780Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:30,834Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:30,841Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:30,841Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,068Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,091Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,095Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,103Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,103Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,219Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:31,245Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:31,253Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:31,253Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:31,467Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:31,472Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:31,472Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:31,474Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:31,489Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:31,498Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:31,500Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:31,504Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:31,529Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:31,531Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-20T16:31:31,531Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-20T16:31:31,539Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:31,544Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:31,544Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:31,546Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:31,546Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:31,562Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163129.947/nodes/1/cordapps] {}
[INFO ] 2020-01-20T16:31:31,563Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:31,563Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:31,577Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:31,638Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:31,680Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:31,680Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:31,683Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:29.946Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:32,227Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,229Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163129.947/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,229Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,245Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,247Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,247Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,450Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,458Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,460Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,462Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,462Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,629Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:32,642Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:32,644Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:32,645Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:33,005Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:33,006Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:33,026Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:33,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,028Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:33,041Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,048Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:33,052Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,058Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:33,083Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:33,091Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:33,095Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:33,103Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,104Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:33,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,112Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:33,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:33,112Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:33,117Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163129.947/nodes/2/cordapps] {}
[INFO ] 2020-01-20T16:31:33,117Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:33,117Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:33,123Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163129.947/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:33,151Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:33,202Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:33,202Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:33,214Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:29.946Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:33,721Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,723Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163129.947/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,723Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,737Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,740Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,740Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,923Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,932Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,934Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,935Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:33,935Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:34,125Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:34,131Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:34,132Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:34,132Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:34,323Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:34,324Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:34,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:34,348Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,353Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:34,368Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,384Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:34,407Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,419Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:34,487Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:34,494Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,496Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537891472) {}
[INFO ] 2020-01-20T16:31:34,497Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:34,505Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,506Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:34,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537893026) {}
[INFO ] 2020-01-20T16:31:34,515Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:34,535Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:34,547Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,547Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:34,547Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537894348) {}
[INFO ] 2020-01-20T16:31:34,547Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:35,640Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=9a162901-ebcc-4cf6-a19d-e1bb5f7deffb, invocation_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, invocation_timestamp=2020-01-20T16:31:34.548Z, origin=Only For Testing, session_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, session_timestamp=2020-01-20T16:31:34.548Z, thread-id=512, tx_id=E488A71C534A70910804510D4B446E979E772DF19EFBFA303F45C5D71AE59422}
[INFO ] 2020-01-20T16:31:35,640Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=9a162901-ebcc-4cf6-a19d-e1bb5f7deffb, invocation_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, invocation_timestamp=2020-01-20T16:31:34.548Z, origin=Only For Testing, session_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, session_timestamp=2020-01-20T16:31:34.548Z, thread-id=512, tx_id=E488A71C534A70910804510D4B446E979E772DF19EFBFA303F45C5D71AE59422}
[INFO ] 2020-01-20T16:31:35,655Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=9a162901-ebcc-4cf6-a19d-e1bb5f7deffb, invocation_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, invocation_timestamp=2020-01-20T16:31:34.548Z, origin=Only For Testing, session_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, session_timestamp=2020-01-20T16:31:34.548Z, thread-id=512, tx_id=E488A71C534A70910804510D4B446E979E772DF19EFBFA303F45C5D71AE59422}
[INFO ] 2020-01-20T16:31:35,655Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=9a162901-ebcc-4cf6-a19d-e1bb5f7deffb, invocation_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, invocation_timestamp=2020-01-20T16:31:34.548Z, origin=Only For Testing, session_id=e4f74782-0a69-4a4b-901e-62fff1a3cb0f, session_timestamp=2020-01-20T16:31:34.548Z, thread-id=512, tx_id=E488A71C534A70910804510D4B446E979E772DF19EFBFA303F45C5D71AE59422}
[INFO ] 2020-01-20T16:31:35,725Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163135.672/nodes/0/cordapps] {}
[INFO ] 2020-01-20T16:31:35,726Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:35,726Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:35,735Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:35,765Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:35,771Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:35,771Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:35,779Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:35.672Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:36,328Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,330Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163135.672/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,330Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,344Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,346Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,346Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,604Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,639Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,642Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,649Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,649Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,797Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:36,832Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:36,856Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:36,857Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:37,244Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:37,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:37,266Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:37,283Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:37,322Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:37,369Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:37,373Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:37,377Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:37,413Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:37,415Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-20T16:31:37,415Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-20T16:31:37,424Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:37,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:37,427Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:37,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:37,427Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:37,437Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163135.672/nodes/1/cordapps] {}
[INFO ] 2020-01-20T16:31:37,438Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:37,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:37,458Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:37,494Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:37,542Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:37,542Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:37,545Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:35.672Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:38,613Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163135.672/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,668Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,671Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,671Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,895Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,913Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,914Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,917Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,917Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:38,997Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:39,003Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:39,004Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:39,004Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:39,176Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:39,177Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:39,206Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:39,206Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,208Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:39,213Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,219Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:39,221Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,225Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:39,250Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:39,265Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,280Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:39,281Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:39,313Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,317Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:39,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,354Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:39,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:39,354Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:39,374Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163135.672/nodes/2/cordapps] {}
[INFO ] 2020-01-20T16:31:39,377Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:39,377Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:39,385Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163135.672/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:39,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:39,433Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:39,433Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:39,437Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:35.672Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:40,045Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,046Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163135.672/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,046Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,066Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,068Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,068Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,250Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,274Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,277Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,279Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,279Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,406Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:40,414Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:40,415Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:40,415Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:40,597Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:40,598Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:40,626Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:40,626Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,627Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:40,634Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,642Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:40,645Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,660Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:40,701Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:40,711Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,714Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537897266) {}
[INFO ] 2020-01-20T16:31:40,716Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:40,726Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,728Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:40,737Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537899206) {}
[INFO ] 2020-01-20T16:31:40,739Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:40,748Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,750Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:40,759Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,759Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:40,759Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537900626) {}
[INFO ] 2020-01-20T16:31:40,759Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:42,283Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e3d442ed-b0c4-489a-9ef2-8e65512a2bde, invocation_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, invocation_timestamp=2020-01-20T16:31:40.760Z, origin=Only For Testing, session_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, session_timestamp=2020-01-20T16:31:40.760Z, thread-id=735, tx_id=DCBF808063D4C88B5A639A18A2BE1CBC12F092DC09C8BB3BE02977FD309BF01A}
[INFO ] 2020-01-20T16:31:42,283Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e3d442ed-b0c4-489a-9ef2-8e65512a2bde, invocation_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, invocation_timestamp=2020-01-20T16:31:40.760Z, origin=Only For Testing, session_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, session_timestamp=2020-01-20T16:31:40.760Z, thread-id=735, tx_id=DCBF808063D4C88B5A639A18A2BE1CBC12F092DC09C8BB3BE02977FD309BF01A}
[INFO ] 2020-01-20T16:31:42,306Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e3d442ed-b0c4-489a-9ef2-8e65512a2bde, invocation_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, invocation_timestamp=2020-01-20T16:31:40.760Z, origin=Only For Testing, session_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, session_timestamp=2020-01-20T16:31:40.760Z, thread-id=735, tx_id=DCBF808063D4C88B5A639A18A2BE1CBC12F092DC09C8BB3BE02977FD309BF01A}
[INFO ] 2020-01-20T16:31:42,306Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e3d442ed-b0c4-489a-9ef2-8e65512a2bde, invocation_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, invocation_timestamp=2020-01-20T16:31:40.760Z, origin=Only For Testing, session_id=23df1b6a-fec6-43f0-99ad-9f8e18c219d5, session_timestamp=2020-01-20T16:31:40.760Z, thread-id=735, tx_id=DCBF808063D4C88B5A639A18A2BE1CBC12F092DC09C8BB3BE02977FD309BF01A}
[INFO ] 2020-01-20T16:31:42,469Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163142.330/nodes/0/cordapps] {}
[INFO ] 2020-01-20T16:31:42,470Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:42,470Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:42,477Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:42,496Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:42,502Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:42,502Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:42,511Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:42.330Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:43,014Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,015Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163142.330/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,015Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,054Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,094Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,094Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,352Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,383Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,383Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,387Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,387Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,458Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:43,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:43,481Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:43,481Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:43,563Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:43,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:43,570Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:43,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:43,611Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:43,628Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:43,634Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:43,640Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:43,676Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:43,677Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-20T16:31:43,677Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-20T16:31:43,686Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:43,690Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:43,690Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:43,691Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:43,691Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:43,699Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163142.330/nodes/1/cordapps] {}
[INFO ] 2020-01-20T16:31:43,699Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:43,699Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:43,705Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:43,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:43,748Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:43,749Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:43,751Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:42.330Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:44,182Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,183Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163142.330/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,183Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,198Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,200Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,200Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,304Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,319Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,320Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,322Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,322Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,413Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:44,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:44,419Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:44,419Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:44,575Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:44,577Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:44,598Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:44,598Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,600Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:44,607Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,614Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:44,617Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,622Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:44,659Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:44,669Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,674Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:44,675Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:44,686Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,687Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:44,703Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,703Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:44,704Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:44,704Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:44,710Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163142.330/nodes/2/cordapps] {}
[INFO ] 2020-01-20T16:31:44,710Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:44,710Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:44,717Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163142.330/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:44,757Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:44,783Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:44,783Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:44,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:42.330Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:45,247Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,248Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163142.330/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,248Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,264Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,267Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,267Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,418Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,425Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,426Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,427Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,427Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,491Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:45,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:45,498Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:45,498Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:45,598Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:45,599Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:45,613Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:45,613Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,614Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:45,619Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,624Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:45,625Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,628Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:45,652Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:45,657Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,660Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537903570) {}
[INFO ] 2020-01-20T16:31:45,661Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:45,670Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,670Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:45,679Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537904598) {}
[INFO ] 2020-01-20T16:31:45,680Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:45,688Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,689Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:45,696Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,696Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:45,696Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537905613) {}
[INFO ] 2020-01-20T16:31:45,696Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:46,663Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a1d588ac-bb57-4c7a-b886-3570b5e669a2, invocation_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, invocation_timestamp=2020-01-20T16:31:45.697Z, origin=Only For Testing, session_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, session_timestamp=2020-01-20T16:31:45.697Z, thread-id=958, tx_id=56557FA18B5668A1E6BB15E628D4B5CA0CC9094D4A376B544289D62E070535E7}
[INFO ] 2020-01-20T16:31:46,663Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a1d588ac-bb57-4c7a-b886-3570b5e669a2, invocation_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, invocation_timestamp=2020-01-20T16:31:45.697Z, origin=Only For Testing, session_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, session_timestamp=2020-01-20T16:31:45.697Z, thread-id=958, tx_id=56557FA18B5668A1E6BB15E628D4B5CA0CC9094D4A376B544289D62E070535E7}
[INFO ] 2020-01-20T16:31:46,675Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a1d588ac-bb57-4c7a-b886-3570b5e669a2, invocation_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, invocation_timestamp=2020-01-20T16:31:45.697Z, origin=Only For Testing, session_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, session_timestamp=2020-01-20T16:31:45.697Z, thread-id=958, tx_id=56557FA18B5668A1E6BB15E628D4B5CA0CC9094D4A376B544289D62E070535E7}
[INFO ] 2020-01-20T16:31:46,675Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a1d588ac-bb57-4c7a-b886-3570b5e669a2, invocation_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, invocation_timestamp=2020-01-20T16:31:45.697Z, origin=Only For Testing, session_id=cf1cee64-4b1b-4c23-b386-f3581d70fae4, session_timestamp=2020-01-20T16:31:45.697Z, thread-id=958, tx_id=56557FA18B5668A1E6BB15E628D4B5CA0CC9094D4A376B544289D62E070535E7}
[INFO ] 2020-01-20T16:31:46,733Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=ee8b3391-3cc7-46de-88e0-60a4a486d71e, invocation_id=a55712b6-c393-4c80-9b7d-daf80937dd01, invocation_timestamp=2020-01-20T16:31:46.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a55712b6-c393-4c80-9b7d-daf80937dd01, session_timestamp=2020-01-20T16:31:46.722Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,774Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=ee8b3391-3cc7-46de-88e0-60a4a486d71e, invocation_id=a55712b6-c393-4c80-9b7d-daf80937dd01, invocation_timestamp=2020-01-20T16:31:46.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a55712b6-c393-4c80-9b7d-daf80937dd01, session_timestamp=2020-01-20T16:31:46.722Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,830Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=38061719-70bf-4e11-8d08-42857620b03d, invocation_id=f30cffca-c740-463f-8755-fcb4b11e385e, invocation_timestamp=2020-01-20T16:31:46.682Z, origin=Only For Testing, session_id=f30cffca-c740-463f-8755-fcb4b11e385e, session_timestamp=2020-01-20T16:31:46.682Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,849Z [Mock network] corda.flow. - Received a notarisation request for Tx [4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000010, flow-id=b48f3741-9819-496e-85c2-1b0f8bcfaa39, invocation_id=9f888a74-5527-4f05-beda-f40f1099cdcf, invocation_timestamp=2020-01-20T16:31:46.841Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f888a74-5527-4f05-beda-f40f1099cdcf, session_timestamp=2020-01-20T16:31:46.841Z, thread-id=958}
[INFO ] 2020-01-20T16:31:46,889Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [56557FA18B5668A1E6BB15E628D4B5CA0CC9094D4A376B544289D62E070535E7(0)]. TxId: 4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209 {}
[INFO ] 2020-01-20T16:31:46,893Z [Mock network] corda.flow. - Transaction [4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000010, flow-id=b48f3741-9819-496e-85c2-1b0f8bcfaa39, invocation_id=9f888a74-5527-4f05-beda-f40f1099cdcf, invocation_timestamp=2020-01-20T16:31:46.841Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f888a74-5527-4f05-beda-f40f1099cdcf, session_timestamp=2020-01-20T16:31:46.841Z, thread-id=958}
[INFO ] 2020-01-20T16:31:46,903Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=38061719-70bf-4e11-8d08-42857620b03d, invocation_id=f30cffca-c740-463f-8755-fcb4b11e385e, invocation_timestamp=2020-01-20T16:31:46.682Z, origin=Only For Testing, session_id=f30cffca-c740-463f-8755-fcb4b11e385e, session_timestamp=2020-01-20T16:31:46.682Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,903Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=38061719-70bf-4e11-8d08-42857620b03d, invocation_id=f30cffca-c740-463f-8755-fcb4b11e385e, invocation_timestamp=2020-01-20T16:31:46.682Z, origin=Only For Testing, session_id=f30cffca-c740-463f-8755-fcb4b11e385e, session_timestamp=2020-01-20T16:31:46.682Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,910Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=38061719-70bf-4e11-8d08-42857620b03d, invocation_id=f30cffca-c740-463f-8755-fcb4b11e385e, invocation_timestamp=2020-01-20T16:31:46.682Z, origin=Only For Testing, session_id=f30cffca-c740-463f-8755-fcb4b11e385e, session_timestamp=2020-01-20T16:31:46.682Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,918Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=ee8b3391-3cc7-46de-88e0-60a4a486d71e, invocation_id=a55712b6-c393-4c80-9b7d-daf80937dd01, invocation_timestamp=2020-01-20T16:31:46.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a55712b6-c393-4c80-9b7d-daf80937dd01, session_timestamp=2020-01-20T16:31:46.722Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,923Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=ee8b3391-3cc7-46de-88e0-60a4a486d71e, invocation_id=a55712b6-c393-4c80-9b7d-daf80937dd01, invocation_timestamp=2020-01-20T16:31:46.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a55712b6-c393-4c80-9b7d-daf80937dd01, session_timestamp=2020-01-20T16:31:46.722Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,929Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=ee8b3391-3cc7-46de-88e0-60a4a486d71e, invocation_id=a55712b6-c393-4c80-9b7d-daf80937dd01, invocation_timestamp=2020-01-20T16:31:46.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a55712b6-c393-4c80-9b7d-daf80937dd01, session_timestamp=2020-01-20T16:31:46.722Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,934Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=ee8b3391-3cc7-46de-88e0-60a4a486d71e, invocation_id=a55712b6-c393-4c80-9b7d-daf80937dd01, invocation_timestamp=2020-01-20T16:31:46.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a55712b6-c393-4c80-9b7d-daf80937dd01, session_timestamp=2020-01-20T16:31:46.722Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,943Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=38061719-70bf-4e11-8d08-42857620b03d, invocation_id=f30cffca-c740-463f-8755-fcb4b11e385e, invocation_timestamp=2020-01-20T16:31:46.682Z, origin=Only For Testing, session_id=f30cffca-c740-463f-8755-fcb4b11e385e, session_timestamp=2020-01-20T16:31:46.682Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:46,943Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=38061719-70bf-4e11-8d08-42857620b03d, invocation_id=f30cffca-c740-463f-8755-fcb4b11e385e, invocation_timestamp=2020-01-20T16:31:46.682Z, origin=Only For Testing, session_id=f30cffca-c740-463f-8755-fcb4b11e385e, session_timestamp=2020-01-20T16:31:46.682Z, thread-id=958, tx_id=4CCBEF77A99E8318C40C894420300EED2E330C0D9101AF92B2DE159D1E402209}
[INFO ] 2020-01-20T16:31:47,010Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163146.958/nodes/0/cordapps] {}
[INFO ] 2020-01-20T16:31:47,010Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:47,010Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:47,017Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:47,039Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:47,042Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:47,042Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:47,047Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:46.957Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:47,438Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,440Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163146.958/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,440Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,450Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,452Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,452Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,518Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,524Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,524Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,525Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,525Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,561Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:47,580Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:47,586Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:47,586Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:47,719Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-20T16:31:47,723Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:47,723Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:47,724Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:47,734Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:47,744Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:47,747Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:47,750Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:47,780Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:47,782Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-20T16:31:47,783Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-20T16:31:47,789Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:47,792Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:47,793Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:47,793Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:47,793Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:47,803Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163146.958/nodes/1/cordapps] {}
[INFO ] 2020-01-20T16:31:47,803Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:47,803Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:47,809Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:47,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:47,869Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:47,869Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:47,871Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:46.957Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:48,178Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,179Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163146.958/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,179Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,187Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,189Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,189Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,241Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,248Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,249Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,250Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,250Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,304Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,309Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:48,310Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:48,310Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:48,409Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:48,410Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:48,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:48,424Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,425Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:48,429Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,433Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:48,435Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,438Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:48,461Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:48,465Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,467Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:48,468Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:48,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,477Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:48,483Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,483Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:48,484Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:48,484Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:48,489Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200120-163146.958/nodes/2/cordapps] {}
[INFO ] 2020-01-20T16:31:48,489Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-20T16:31:48,489Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-20T16:31:48,495Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/bootcamp_bootcamp/workflows/build/mock-network/20200120-163146.958/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-20T16:31:48,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-20T16:31:48,531Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day1.flows.AssetTransferInitiatorFlow to initiate com.bootcamp.day1.flows.AssetTransferResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:48,532Z [Test worker] internal.NodeFlowManager. - Registered com.bootcamp.day2.flows.AssetTokenSaleInitiatorFlow to initiate com.bootcamp.day2.flows.AssetTokenSaleResponderFlow (version 1) {}
[INFO ] 2020-01-20T16:31:48,534Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-20T16:31:46.957Z
      epoch=1
  } {}
[INFO ] 2020-01-20T16:31:48,857Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,858Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200120-163146.958/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,858Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,866Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,867Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,867Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,936Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,944Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,945Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,947Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:48,947Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:49,006Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-20T16:31:49,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-20T16:31:49,010Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:49,010Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:49,099Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-01-20T16:31:49,100Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-20T16:31:49,113Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-20T16:31:49,113Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,114Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:49,118Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,123Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-20T16:31:49,125Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,128Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:49,149Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=12CB5336B6392D66120B90825ECC55B8E04A21972115B684146F3847A1477B4B uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-20T16:31:49,154Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1579537907723) {}
[INFO ] 2020-01-20T16:31:49,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-20T16:31:49,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,162Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:49,173Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1579537908424) {}
[INFO ] 2020-01-20T16:31:49,175Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:49,190Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,192Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-20T16:31:49,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,203Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-20T16:31:49,204Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1579537909113) {}
[INFO ] 2020-01-20T16:31:49,204Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:07,969Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/ericmcevoy/accounts_java_samples/workflows ... {}
[INFO ] 2020-01-27T14:57:08,230Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T14:57:09,695Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-27T14:57:10,635Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-01-27T14:57:10,652Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-27T14:57:10,653Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T14:57:11,211Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T14:57:11,235Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-01-27T14:57:11,717Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T14:57:11,717Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T14:57:11,717Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-01-27T14:57:11,866Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T14:57:11,877Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T14:57:12,401Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-01-27T14:57:12,790Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T14:57:12,800Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-27T14:57:12,811Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T14:57:12,824Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-27T14:57:12,824Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T14:57:13,462Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T14:57:13,462Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-01-27T14:57:13,483Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T14:57:13,483Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-01-27T14:57:13,516Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T14:57:13,516Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T14:57:13,618Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:13,652Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T14:57:13,707Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-01-27T14:57:13,845Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T14:57:13,845Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-01-27T14:57:13,856Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T14:57:13,879Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-01-27T14:57:13,879Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T14:57:13,900Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:13,900Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-01-27T14:57:13,912Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:13,912Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-01-27T14:57:13,912Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:13,912Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,934Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,946Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,946Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,956Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,957Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,969Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,970Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T14:57:13,970Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:13,970Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:13,970Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-01-27T14:57:13,981Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:13,981Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T14:57:13,991Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-01-27T14:57:14,025Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T14:57:14,025Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-01-27T14:57:14,025Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T14:57:14,026Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-01-27T14:57:14,036Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T14:57:14,036Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:14,036Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-01-27T14:57:14,047Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:14,048Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-01-27T14:57:14,048Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:14,048Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,048Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,071Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:14,072Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-01-27T14:57:14,082Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T14:57:14,092Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T14:57:14,093Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-01-27T14:57:14,093Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T14:57:14,094Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T14:57:14,104Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/ericmcevoy/accounts_java_samples/.gradle {}
[INFO ] 2020-01-27T14:57:14,104Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T14:57:14,142Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-01-27T14:57:14,587Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200127-145702.223/nodes/0/cordapps] {}
[INFO ] 2020-01-27T14:57:14,591Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/accounts-workflows-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/accounts-contracts-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/ci-workflows-1.0-RC03.jar, rootPackageName=null) {}
[INFO ] 2020-01-27T14:57:14,617Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/accounts-workflows-1.0-RC04.jar {}
[INFO ] 2020-01-27T14:57:14,707Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-27T14:57:14,725Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-27T14:57:14,732Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/accounts-contracts-1.0-RC04.jar {}
[INFO ] 2020-01-27T14:57:14,743Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/0/cordapps/ci-workflows-1.0-RC03.jar {}
[INFO ] 2020-01-27T14:57:15,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-27T14:57:15,739Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2020-01-27T14:57:15,741Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2020-01-27T14:57:15,742Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T14:57:15,743Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2020-01-27T14:57:15,745Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T14:57:15,759Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flows.NodeAccountToNodeAccountFlows$NodeAccountToNodeAccountInitiatorFlow to initiate org.r3.flows.NodeAccountToNodeAccountFlows$nodeAccountToNodeAccountResponderFlow (version 1) {}
[INFO ] 2020-01-27T14:57:15,764Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForAccount to initiate com.r3.corda.lib.ci.workflows.RequestKeyForAccountResponder (version 1) {}
[INFO ] 2020-01-27T14:57:15,766Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1) {}
[INFO ] 2020-01-27T14:57:15,767Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1) {}
[INFO ] 2020-01-27T14:57:15,768Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1) {}
[INFO ] 2020-01-27T14:57:16,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-27T14:57:02.164Z
      epoch=1
  } {}
[INFO ] 2020-01-27T14:57:26,429Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:26,461Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200127-145702.223/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:26,461Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:26,494Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:26,657Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:26,670Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,012Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,715Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,717Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,720Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,720Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,799Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:30,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-27T14:57:30,866Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-27T14:57:30,867Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-27T14:57:31,122Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-27T14:57:31,134Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-27T14:57:31,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:31,139Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-27T14:57:31,324Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:31,386Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-27T14:57:31,407Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:31,431Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:31,465Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=87CBABF5313BCA01896AA5AA43E6C283B7A56634DA9C097CED4A1BE76F28851D uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-27T14:57:31,478Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=1CC4F4FC05F53987F70A76E8D2D9129474BCAAD1E7D4A011D115684FC7C1A83C uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2020-01-27T14:57:31,482Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-27T14:57:31,485Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-27T14:57:31,510Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2020-01-27T14:57:32,024Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:32,049Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:32,051Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:32,052Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:32,052Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:32,063Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200127-145702.223/nodes/1/cordapps] {}
[INFO ] 2020-01-27T14:57:32,063Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/accounts-workflows-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/accounts-contracts-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/ci-workflows-1.0-RC03.jar, rootPackageName=null) {}
[INFO ] 2020-01-27T14:57:32,063Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/accounts-workflows-1.0-RC04.jar {}
[INFO ] 2020-01-27T14:57:32,075Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-27T14:57:32,080Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-27T14:57:32,086Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/accounts-contracts-1.0-RC04.jar {}
[INFO ] 2020-01-27T14:57:32,093Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/1/cordapps/ci-workflows-1.0-RC03.jar {}
[WARN ] 2020-01-27T14:57:32,101Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Accounts - Flows, file: accounts-workflows-1.0-RC04) is installed multiple times on the node. The following files correspond to the exact same content: [accounts-workflows-1.0-RC04] {}
[WARN ] 2020-01-27T14:57:32,102Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Nasdaq CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-01-27T14:57:32,103Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Nasdaq CorDapp, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[WARN ] 2020-01-27T14:57:32,103Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Accounts SDK - States and Contracts, file: accounts-contracts-1.0-RC04) is installed multiple times on the node. The following files correspond to the exact same content: [accounts-contracts-1.0-RC04] {}
[WARN ] 2020-01-27T14:57:32,104Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Confidential Identities Workflows, file: ci-workflows-1.0-RC03) is installed multiple times on the node. The following files correspond to the exact same content: [ci-workflows-1.0-RC03] {}
[INFO ] 2020-01-27T14:57:32,129Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flows.NodeAccountToNodeAccountFlows$NodeAccountToNodeAccountInitiatorFlow to initiate org.r3.flows.NodeAccountToNodeAccountFlows$nodeAccountToNodeAccountResponderFlow (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForAccount to initiate com.r3.corda.lib.ci.workflows.RequestKeyForAccountResponder (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1) {}
[INFO ] 2020-01-27T14:57:32,153Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1) {}
[INFO ] 2020-01-27T14:57:32,154Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1) {}
[INFO ] 2020-01-27T14:57:32,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-27T14:57:02.164Z
      epoch=1
  } {}
[INFO ] 2020-01-27T14:57:32,668Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,670Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200127-145702.223/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,670Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,686Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,688Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,688Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,798Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,818Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,819Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,822Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,822Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,879Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:32,886Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-27T14:57:32,889Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T14:57:32,889Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T14:57:33,046Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T14:57:33,048Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-27T14:57:33,074Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-27T14:57:33,074Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,076Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-27T14:57:33,085Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,094Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-27T14:57:33,096Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,102Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:33,139Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=87CBABF5313BCA01896AA5AA43E6C283B7A56634DA9C097CED4A1BE76F28851D uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-27T14:57:33,148Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=1CC4F4FC05F53987F70A76E8D2D9129474BCAAD1E7D4A011D115684FC7C1A83C uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2020-01-27T14:57:33,151Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2020-01-27T14:57:33,160Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,166Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:33,167Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-27T14:57:33,179Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,180Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-27T14:57:33,191Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,192Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:33,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:33,192Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:33,197Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200127-145702.223/nodes/2/cordapps] {}
[INFO ] 2020-01-27T14:57:33,198Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/accounts-workflows-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/accounts-contracts-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/ci-workflows-1.0-RC03.jar, rootPackageName=null) {}
[INFO ] 2020-01-27T14:57:33,198Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/accounts-workflows-1.0-RC04.jar {}
[INFO ] 2020-01-27T14:57:33,206Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-27T14:57:33,211Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-27T14:57:33,216Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/accounts-contracts-1.0-RC04.jar {}
[INFO ] 2020-01-27T14:57:33,221Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-145702.223/nodes/2/cordapps/ci-workflows-1.0-RC03.jar {}
[INFO ] 2020-01-27T14:57:33,254Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-27T14:57:33,274Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2020-01-27T14:57:33,274Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2020-01-27T14:57:33,274Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T14:57:33,274Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2020-01-27T14:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T14:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flows.NodeAccountToNodeAccountFlows$NodeAccountToNodeAccountInitiatorFlow to initiate org.r3.flows.NodeAccountToNodeAccountFlows$nodeAccountToNodeAccountResponderFlow (version 1) {}
[INFO ] 2020-01-27T14:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForAccount to initiate com.r3.corda.lib.ci.workflows.RequestKeyForAccountResponder (version 1) {}
[INFO ] 2020-01-27T14:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1) {}
[INFO ] 2020-01-27T14:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1) {}
[INFO ] 2020-01-27T14:57:33,275Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1) {}
[INFO ] 2020-01-27T14:57:33,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-27T14:57:02.164Z
      epoch=1
  } {}
[INFO ] 2020-01-27T14:57:33,734Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,736Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200127-145702.223/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,736Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,748Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,752Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,752Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,853Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,862Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,863Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,865Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,865Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,909Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T14:57:33,914Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-27T14:57:33,915Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T14:57:33,915Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T14:57:34,009Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T14:57:34,010Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-27T14:57:34,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-27T14:57:34,027Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,029Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-27T14:57:34,036Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,044Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-27T14:57:34,047Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,050Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:34,072Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=87CBABF5313BCA01896AA5AA43E6C283B7A56634DA9C097CED4A1BE76F28851D uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-27T14:57:34,080Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=1CC4F4FC05F53987F70A76E8D2D9129474BCAAD1E7D4A011D115684FC7C1A83C uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2020-01-27T14:57:34,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2020-01-27T14:57:34,088Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,090Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137051134) {}
[INFO ] 2020-01-27T14:57:34,091Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-27T14:57:34,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,101Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-27T14:57:34,109Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137053074) {}
[INFO ] 2020-01-27T14:57:34,110Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-27T14:57:34,122Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,124Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-27T14:57:34,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,134Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:34,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137054027) {}
[INFO ] 2020-01-27T14:57:34,134Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T14:57:36,255Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=292b1119-6bdd-4309-a256-aec4c4884e7a, invocation_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, invocation_timestamp=2020-01-27T14:57:34.526Z, origin=Only For Testing, session_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, session_timestamp=2020-01-27T14:57:34.526Z, thread-id=551, tx_id=F932936436C6A64215A4DCCCC72ED7C0853855696F55E1D137FA48EE808AB435}
[INFO ] 2020-01-27T14:57:36,255Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=292b1119-6bdd-4309-a256-aec4c4884e7a, invocation_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, invocation_timestamp=2020-01-27T14:57:34.526Z, origin=Only For Testing, session_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, session_timestamp=2020-01-27T14:57:34.526Z, thread-id=551, tx_id=F932936436C6A64215A4DCCCC72ED7C0853855696F55E1D137FA48EE808AB435}
[INFO ] 2020-01-27T14:57:36,361Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=292b1119-6bdd-4309-a256-aec4c4884e7a, invocation_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, invocation_timestamp=2020-01-27T14:57:34.526Z, origin=Only For Testing, session_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, session_timestamp=2020-01-27T14:57:34.526Z, thread-id=551, tx_id=F932936436C6A64215A4DCCCC72ED7C0853855696F55E1D137FA48EE808AB435}
[INFO ] 2020-01-27T14:57:36,362Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=292b1119-6bdd-4309-a256-aec4c4884e7a, invocation_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, invocation_timestamp=2020-01-27T14:57:34.526Z, origin=Only For Testing, session_id=3fa5e44a-b0d5-42e9-9c9f-59d79cacb065, session_timestamp=2020-01-27T14:57:34.526Z, thread-id=551, tx_id=F932936436C6A64215A4DCCCC72ED7C0853855696F55E1D137FA48EE808AB435}
[INFO ] 2020-01-27T14:57:36,436Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69278084-0f1d-43dc-b384-fd771b19ca3f, invocation_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, invocation_timestamp=2020-01-27T14:57:34.688Z, origin=Only For Testing, session_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, session_timestamp=2020-01-27T14:57:34.688Z, thread-id=551, tx_id=20611063B5D32442F9BBE71DF316705424D12D96EC3F5BB8493C7547A0ED023B}
[INFO ] 2020-01-27T14:57:36,436Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69278084-0f1d-43dc-b384-fd771b19ca3f, invocation_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, invocation_timestamp=2020-01-27T14:57:34.688Z, origin=Only For Testing, session_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, session_timestamp=2020-01-27T14:57:34.688Z, thread-id=551, tx_id=20611063B5D32442F9BBE71DF316705424D12D96EC3F5BB8493C7547A0ED023B}
[INFO ] 2020-01-27T14:57:36,441Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69278084-0f1d-43dc-b384-fd771b19ca3f, invocation_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, invocation_timestamp=2020-01-27T14:57:34.688Z, origin=Only For Testing, session_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, session_timestamp=2020-01-27T14:57:34.688Z, thread-id=551, tx_id=20611063B5D32442F9BBE71DF316705424D12D96EC3F5BB8493C7547A0ED023B}
[INFO ] 2020-01-27T14:57:36,441Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=69278084-0f1d-43dc-b384-fd771b19ca3f, invocation_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, invocation_timestamp=2020-01-27T14:57:34.688Z, origin=Only For Testing, session_id=75f5d3c1-6aeb-4333-8b27-8ed4a3f6e8cf, session_timestamp=2020-01-27T14:57:34.688Z, thread-id=551, tx_id=20611063B5D32442F9BBE71DF316705424D12D96EC3F5BB8493C7547A0ED023B}
[INFO ] 2020-01-27T14:57:36,501Z [Mock network] identity.PersistentIdentityService. - Linking: E677AD830FAE6A387E6C19195E35AE4291409ADC7A42989DFA34183401270F64 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
[WARN ] 2020-01-27T14:57:36,510Z [Mock network] contracts.TransactionState. - State class org.r3.contracts.AssetForAccountState belongs to contract org.r3.contracts.AssetForAccountContract, but is bundled with contract com.bootcamp.day2.accounts.contracts.AssetForAccountContract in TransactionState. Annotate AssetForAccountState with @BelongsToContract(com.bootcamp.day2.accounts.contracts.AssetForAccountContract.class) to remove this warning. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
[INFO ] 2020-01-27T14:57:36,513Z [Mock network] corda.flow. - Flow raised an error: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
[INFO ] 2020-01-27T14:57:36,516Z [Mock network] statemachine.StaffedFlowHospital. - Flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Invocation, sessionId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CC2E2BDFC6C8FFFC42E626D929B2EDAA37EFFDEA374C31AAB4DCE02834DAB0C1), errorState=Clean, numberOfSuspends=0), flowLogic=org.r3.flows.AssetForAccountStateSelfIssueFlow@512f5882, pendingDeduplicationHandlers=[], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=4544da50-92b4-4730-b329-1928a67c886b) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
[INFO ] 2020-01-27T14:57:36,519Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging
	at net.corda.core.transactions.TransactionBuilder.getInstalledContractAttachmentId(TransactionBuilder.kt:545) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.access$getInstalledContractAttachmentId(TransactionBuilder.kt:45) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder$handleContract$1.invoke(TransactionBuilder.kt:331) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.handleContract(TransactionBuilder.kt:391) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.selectContractAttachmentsAndOutputStateConstraints(TransactionBuilder.kt:288) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:139) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:56) ~[main/:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[INFO ] 2020-01-27T14:57:36,522Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging
	at net.corda.core.transactions.TransactionBuilder.getInstalledContractAttachmentId(TransactionBuilder.kt:545) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.access$getInstalledContractAttachmentId(TransactionBuilder.kt:45) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder$handleContract$1.invoke(TransactionBuilder.kt:331) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.handleContract(TransactionBuilder.kt:391) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.selectContractAttachmentsAndOutputStateConstraints(TransactionBuilder.kt:288) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:139) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:56) ~[main/:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[WARN ] 2020-01-27T14:57:36,541Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] errored, dumping all transitions:

 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.478Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cafd25ac-e02e-46a8-9b41-64e33dc4c1ca], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Invocation, sessionId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CC2E2BDFC6C8FFFC42E626D929B2EDAA37EFFDEA374C31AAB4DCE02834DAB0C1), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@23c72916])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@23c72916])
    SignalFlowHasStarted(flowId=[cafd25ac-e02e-46a8-9b41-64e33dc4c1ca])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@23c72916]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.479Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.AccountInfoByName, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=accounts-workflows-1.0-RC04, corDappHash=14631913D5C5B1A57DFE8AB0FABB7EBACEF0E1BD6F347AAF85462C8847EBB81B), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.AccountInfoByName, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=accounts-workflows-1.0-RC04, corDappHash=14631913D5C5B1A57DFE8AB0FABB7EBACEF0E1BD6F347AAF85462C8847EBB81B), isEnabledTimedFlow=false)]


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.496Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.AccountInfoByName, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=accounts-workflows-1.0-RC04, corDappHash=14631913D5C5B1A57DFE8AB0FABB7EBACEF0E1BD6F347AAF85462C8847EBB81B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)]


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.523Z
  Event: Error(exception=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1708027163144719841, exception=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.529Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.530Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
[WARN ] 2020-01-27T14:57:36,541Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] error [errorCode=1ovjl3n, moreInformationAt=https://errors.corda.net/OS/4.3/1ovjl3n] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging
	at net.corda.core.transactions.TransactionBuilder.getInstalledContractAttachmentId(TransactionBuilder.kt:545) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.access$getInstalledContractAttachmentId(TransactionBuilder.kt:45) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder$handleContract$1.invoke(TransactionBuilder.kt:331) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.handleContract(TransactionBuilder.kt:391) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.selectContractAttachmentsAndOutputStateConstraints(TransactionBuilder.kt:288) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:139) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:56) ~[main/:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[WARN ] 2020-01-27T14:57:36,543Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=1ovjl3n, moreInformationAt=https://errors.corda.net/OS/4.3/1ovjl3n] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging
	at net.corda.core.transactions.TransactionBuilder.getInstalledContractAttachmentId(TransactionBuilder.kt:545) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.access$getInstalledContractAttachmentId(TransactionBuilder.kt:45) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder$handleContract$1.invoke(TransactionBuilder.kt:331) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.handleContract(TransactionBuilder.kt:391) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.selectContractAttachmentsAndOutputStateConstraints(TransactionBuilder.kt:288) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:139) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:56) ~[main/:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[WARN ] 2020-01-27T14:57:36,554Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] errored, dumping all transitions:

 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.478Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cafd25ac-e02e-46a8-9b41-64e33dc4c1ca], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Invocation, sessionId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CC2E2BDFC6C8FFFC42E626D929B2EDAA37EFFDEA374C31AAB4DCE02834DAB0C1), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@23c72916])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@23c72916])
    SignalFlowHasStarted(flowId=[cafd25ac-e02e-46a8-9b41-64e33dc4c1ca])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@23c72916]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.479Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.AccountInfoByName, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=accounts-workflows-1.0-RC04, corDappHash=14631913D5C5B1A57DFE8AB0FABB7EBACEF0E1BD6F347AAF85462C8847EBB81B), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.AccountInfoByName, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=accounts-workflows-1.0-RC04, corDappHash=14631913D5C5B1A57DFE8AB0FABB7EBACEF0E1BD6F347AAF85462C8847EBB81B), isEnabledTimedFlow=false)]


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.496Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.AccountInfoByName, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=accounts-workflows-1.0-RC04, corDappHash=14631913D5C5B1A57DFE8AB0FABB7EBACEF0E1BD6F347AAF85462C8847EBB81B), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)]


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.523Z
  Event: Error(exception=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1708027163144719841, exception=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.529Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.530Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] ---
  Timestamp: 2020-01-27T14:57:36.552Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging, errorId=1708027163144719841)], sessions=[], senderUUID=4544da50-92b4-4730-b329-1928a67c886b)
    CreateTransaction
    RemoveCheckpoint(id=[cafd25ac-e02e-46a8-9b41-64e33dc4c1ca])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[cafd25ac-e02e-46a8-9b41-64e33dc4c1ca], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=1708027163144719841, exception=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Invocation, sessionId=9186881c-c4f0-49fd-9cc4-452df1f189d3, timestamp: 2020-01-27T14:57:36.414Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Inlined(flowClass=class org.r3.flows.AssetForAccountStateSelfIssueFlow, subFlowVersion=CorDappFlow(platformVersion=5, corDappName=workflows-0.1, corDappHash=3950DA25F1B7B9FD3CC2E82BCEB4EEBB88794E2AD3A5AA935C8144E9F7644600), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=CC2E2BDFC6C8FFFC42E626D929B2EDAA37EFFDEA374C31AAB4DCE02834DAB0C1), errorState=Errored(errors=[FlowError(errorId=1708027163144719841, exception=net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=org.r3.flows.AssetForAccountStateSelfIssueFlow@512f5882, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=4544da50-92b4-4730-b329-1928a67c886b))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
[WARN ] 2020-01-27T14:57:36,554Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cafd25ac-e02e-46a8-9b41-64e33dc4c1ca] error [errorCode=1ovjl3n, moreInformationAt=https://errors.corda.net/OS/4.3/1ovjl3n] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=cafd25ac-e02e-46a8-9b41-64e33dc4c1ca, invocation_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, invocation_timestamp=2020-01-27T14:57:36.414Z, origin=Only For Testing, session_id=9186881c-c4f0-49fd-9cc4-452df1f189d3, session_timestamp=2020-01-27T14:57:36.414Z, thread-id=551}
net.corda.core.transactions.MissingContractAttachments: Cannot find contract attachments for com.bootcamp.day2.accounts.contracts.AssetForAccountContractnull. See https://docs.corda.net/api-contract-constraints.html#debugging
	at net.corda.core.transactions.TransactionBuilder.getInstalledContractAttachmentId(TransactionBuilder.kt:545) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.access$getInstalledContractAttachmentId(TransactionBuilder.kt:45) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder$handleContract$1.invoke(TransactionBuilder.kt:331) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.handleContract(TransactionBuilder.kt:391) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.selectContractAttachmentsAndOutputStateConstraints(TransactionBuilder.kt:288) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:139) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:56) ~[main/:?]
	at org.r3.flows.AssetForAccountStateSelfIssueFlow.call(AssetForAccountStateSelfIssueFlow.java:20) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_201]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_201]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_201]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_201]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[INFO ] 2020-01-27T15:00:16,248Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/ericmcevoy/accounts_java_samples/workflows ... {}
[INFO ] 2020-01-27T15:00:16,511Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T15:00:17,944Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-27T15:00:18,901Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-01-27T15:00:18,914Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-27T15:00:18,915Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T15:00:19,402Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T15:00:19,424Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-01-27T15:00:19,889Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T15:00:19,899Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T15:00:19,899Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-01-27T15:00:20,041Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T15:00:20,053Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T15:00:20,579Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-01-27T15:00:20,978Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T15:00:20,978Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-27T15:00:20,989Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T15:00:20,990Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-27T15:00:20,990Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-27T15:00:21,649Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T15:00:21,649Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-01-27T15:00:21,680Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T15:00:21,680Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-01-27T15:00:21,722Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-27T15:00:21,722Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T15:00:21,834Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:21,856Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T15:00:21,899Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-01-27T15:00:22,019Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T15:00:22,019Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-01-27T15:00:22,030Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T15:00:22,054Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-01-27T15:00:22,054Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-01-27T15:00:22,075Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,075Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-01-27T15:00:22,075Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,076Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-01-27T15:00:22,076Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,076Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,097Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,117Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,117Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-01-27T15:00:22,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,128Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,128Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-01-27T15:00:22,139Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,139Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T15:00:22,150Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-01-27T15:00:22,181Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T15:00:22,181Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-01-27T15:00:22,181Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T15:00:22,181Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-01-27T15:00:22,181Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-01-27T15:00:22,191Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,192Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-01-27T15:00:22,192Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,192Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-01-27T15:00:22,192Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,192Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,202Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,224Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,226Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,227Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,227Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-01-27T15:00:22,227Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-01-27T15:00:22,227Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,227Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-01-27T15:00:22,237Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-27T15:00:22,237Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T15:00:22,256Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-01-27T15:00:22,256Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-27T15:00:22,258Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T15:00:22,258Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/ericmcevoy/accounts_java_samples/.gradle {}
[INFO ] 2020-01-27T15:00:22,258Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-27T15:00:22,289Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-01-27T15:00:22,771Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200127-150010.685/nodes/0/cordapps] {}
[INFO ] 2020-01-27T15:00:22,777Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/accounts-workflows-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/accounts-contracts-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/ci-workflows-1.0-RC03.jar, rootPackageName=null) {}
[INFO ] 2020-01-27T15:00:22,801Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/accounts-workflows-1.0-RC04.jar {}
[INFO ] 2020-01-27T15:00:22,916Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-27T15:00:22,936Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-27T15:00:22,947Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/accounts-contracts-1.0-RC04.jar {}
[INFO ] 2020-01-27T15:00:22,960Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/0/cordapps/ci-workflows-1.0-RC03.jar {}
[INFO ] 2020-01-27T15:00:23,888Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-27T15:00:23,949Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2020-01-27T15:00:23,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2020-01-27T15:00:23,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T15:00:23,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2020-01-27T15:00:23,951Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T15:00:23,956Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flows.NodeAccountToNodeAccountFlows$NodeAccountToNodeAccountInitiatorFlow to initiate org.r3.flows.NodeAccountToNodeAccountFlows$nodeAccountToNodeAccountResponderFlow (version 1) {}
[INFO ] 2020-01-27T15:00:23,956Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForAccount to initiate com.r3.corda.lib.ci.workflows.RequestKeyForAccountResponder (version 1) {}
[INFO ] 2020-01-27T15:00:23,957Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1) {}
[INFO ] 2020-01-27T15:00:23,957Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1) {}
[INFO ] 2020-01-27T15:00:23,957Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1) {}
[INFO ] 2020-01-27T15:00:24,117Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-27T15:00:10.625Z
      epoch=1
  } {}
[INFO ] 2020-01-27T15:00:28,241Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:28,247Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200127-150010.685/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:28,247Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:28,275Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:28,348Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:28,353Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:30,398Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:30,998Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:30,999Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:31,002Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:31,002Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:31,062Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:31,104Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-27T15:00:31,124Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-27T15:00:31,124Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-27T15:00:31,362Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-27T15:00:31,369Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-27T15:00:31,369Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:31,373Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-27T15:00:31,526Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:31,582Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-27T15:00:31,612Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:31,638Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:31,667Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=20D25A7AFE4A6DED3FF22D35947F1D8F478ED0FDADD4948038DEFE47D42FDD03 uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-27T15:00:31,681Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=1CC4F4FC05F53987F70A76E8D2D9129474BCAAD1E7D4A011D115684FC7C1A83C uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2020-01-27T15:00:31,685Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-27T15:00:31,689Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-27T15:00:31,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2020-01-27T15:00:32,168Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:32,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:32,207Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:32,207Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:32,207Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:32,217Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200127-150010.685/nodes/1/cordapps] {}
[INFO ] 2020-01-27T15:00:32,218Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/accounts-workflows-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/accounts-contracts-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/ci-workflows-1.0-RC03.jar, rootPackageName=null) {}
[INFO ] 2020-01-27T15:00:32,218Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/accounts-workflows-1.0-RC04.jar {}
[INFO ] 2020-01-27T15:00:32,229Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-27T15:00:32,234Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-27T15:00:32,239Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/accounts-contracts-1.0-RC04.jar {}
[INFO ] 2020-01-27T15:00:32,245Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/1/cordapps/ci-workflows-1.0-RC03.jar {}
[WARN ] 2020-01-27T15:00:32,252Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Accounts - Flows, file: accounts-workflows-1.0-RC04) is installed multiple times on the node. The following files correspond to the exact same content: [accounts-workflows-1.0-RC04] {}
[WARN ] 2020-01-27T15:00:32,253Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Nasdaq CorDapp, file: contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [contracts-0.1] {}
[WARN ] 2020-01-27T15:00:32,253Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Nasdaq CorDapp, file: workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [workflows-0.1] {}
[WARN ] 2020-01-27T15:00:32,253Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Accounts SDK - States and Contracts, file: accounts-contracts-1.0-RC04) is installed multiple times on the node. The following files correspond to the exact same content: [accounts-contracts-1.0-RC04] {}
[WARN ] 2020-01-27T15:00:32,254Z [Test worker] cordapp.CordappResolver. - The CorDapp (name: Confidential Identities Workflows, file: ci-workflows-1.0-RC03) is installed multiple times on the node. The following files correspond to the exact same content: [ci-workflows-1.0-RC03] {}
[INFO ] 2020-01-27T15:00:32,274Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flows.NodeAccountToNodeAccountFlows$NodeAccountToNodeAccountInitiatorFlow to initiate org.r3.flows.NodeAccountToNodeAccountFlows$nodeAccountToNodeAccountResponderFlow (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForAccount to initiate com.r3.corda.lib.ci.workflows.RequestKeyForAccountResponder (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1) {}
[INFO ] 2020-01-27T15:00:32,296Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1) {}
[INFO ] 2020-01-27T15:00:32,299Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-27T15:00:10.625Z
      epoch=1
  } {}
[INFO ] 2020-01-27T15:00:32,850Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,853Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200127-150010.685/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,853Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,868Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,871Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,871Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,972Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,984Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,985Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,988Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:32,988Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,044Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,049Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-27T15:00:33,051Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T15:00:33,051Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T15:00:33,163Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T15:00:33,164Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-27T15:00:33,187Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-27T15:00:33,187Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,194Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-27T15:00:33,202Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,211Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-27T15:00:33,213Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,219Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:33,249Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=20D25A7AFE4A6DED3FF22D35947F1D8F478ED0FDADD4948038DEFE47D42FDD03 uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-27T15:00:33,259Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=1CC4F4FC05F53987F70A76E8D2D9129474BCAAD1E7D4A011D115684FC7C1A83C uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2020-01-27T15:00:33,261Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2020-01-27T15:00:33,268Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,272Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:33,273Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-27T15:00:33,284Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,285Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-27T15:00:33,297Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,297Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:33,297Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:33,297Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:33,304Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200127-150010.685/nodes/2/cordapps] {}
[INFO ] 2020-01-27T15:00:33,304Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/accounts-workflows-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/accounts-contracts-1.0-RC04.jar, rootPackageName=null), RestrictedURL(url=file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/ci-workflows-1.0-RC03.jar, rootPackageName=null) {}
[INFO ] 2020-01-27T15:00:33,304Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/accounts-workflows-1.0-RC04.jar {}
[INFO ] 2020-01-27T15:00:33,313Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-01-27T15:00:33,320Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-01-27T15:00:33,326Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/accounts-contracts-1.0-RC04.jar {}
[INFO ] 2020-01-27T15:00:33,332Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/ericmcevoy/accounts_java_samples/workflows/build/mock-network/20200127-150010.685/nodes/2/cordapps/ci-workflows-1.0-RC03.jar {}
[INFO ] 2020-01-27T15:00:33,358Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered org.r3.flows.NodeAccountToNodeAccountFlows$NodeAccountToNodeAccountInitiatorFlow to initiate org.r3.flows.NodeAccountToNodeAccountFlows$nodeAccountToNodeAccountResponderFlow (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForAccount to initiate com.r3.corda.lib.ci.workflows.RequestKeyForAccountResponder (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1) {}
[INFO ] 2020-01-27T15:00:33,382Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1) {}
[INFO ] 2020-01-27T15:00:33,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-27T15:00:10.625Z
      epoch=1
  } {}
[INFO ] 2020-01-27T15:00:33,815Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,818Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200127-150010.685/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,818Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,833Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,837Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,837Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,923Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,933Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,934Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,937Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,937Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,993Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-27T15:00:33,997Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-27T15:00:33,999Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T15:00:33,999Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T15:00:34,103Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1)] {}
[INFO ] 2020-01-27T15:00:34,104Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-27T15:00:34,120Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-27T15:00:34,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,122Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-27T15:00:34,129Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,136Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-27T15:00:34,139Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,143Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:34,167Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=20D25A7AFE4A6DED3FF22D35947F1D8F478ED0FDADD4948038DEFE47D42FDD03 uploader=app filename=Nasdaq CorDapp {}
[INFO ] 2020-01-27T15:00:34,179Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=1CC4F4FC05F53987F70A76E8D2D9129474BCAAD1E7D4A011D115684FC7C1A83C uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2020-01-27T15:00:34,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2020-01-27T15:00:34,191Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,194Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1580137231369) {}
[INFO ] 2020-01-27T15:00:34,195Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-27T15:00:34,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,206Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-27T15:00:34,215Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1580137233187) {}
[INFO ] 2020-01-27T15:00:34,216Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-27T15:00:34,225Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,226Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-27T15:00:34,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,236Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:34,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1580137234120) {}
[INFO ] 2020-01-27T15:00:34,236Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-27T15:00:36,506Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=108f0fb1-c950-4b00-a010-da4aa439ee95, invocation_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, invocation_timestamp=2020-01-27T15:00:34.580Z, origin=Only For Testing, session_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, session_timestamp=2020-01-27T15:00:34.580Z, thread-id=551, tx_id=C2754639ACA5CBC0FBEB826572E2AB798EE19EAF4517AB8C1566D54FD8FC424E}
[INFO ] 2020-01-27T15:00:36,506Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=108f0fb1-c950-4b00-a010-da4aa439ee95, invocation_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, invocation_timestamp=2020-01-27T15:00:34.580Z, origin=Only For Testing, session_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, session_timestamp=2020-01-27T15:00:34.580Z, thread-id=551, tx_id=C2754639ACA5CBC0FBEB826572E2AB798EE19EAF4517AB8C1566D54FD8FC424E}
[INFO ] 2020-01-27T15:00:36,768Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=108f0fb1-c950-4b00-a010-da4aa439ee95, invocation_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, invocation_timestamp=2020-01-27T15:00:34.580Z, origin=Only For Testing, session_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, session_timestamp=2020-01-27T15:00:34.580Z, thread-id=551, tx_id=C2754639ACA5CBC0FBEB826572E2AB798EE19EAF4517AB8C1566D54FD8FC424E}
[INFO ] 2020-01-27T15:00:36,769Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=108f0fb1-c950-4b00-a010-da4aa439ee95, invocation_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, invocation_timestamp=2020-01-27T15:00:34.580Z, origin=Only For Testing, session_id=279f7ad0-3b3f-42d0-9c40-af59952dd04c, session_timestamp=2020-01-27T15:00:34.580Z, thread-id=551, tx_id=C2754639ACA5CBC0FBEB826572E2AB798EE19EAF4517AB8C1566D54FD8FC424E}
[INFO ] 2020-01-27T15:00:36,944Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=f6ecda3f-a408-4453-9a70-f04555a0b37c, invocation_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, invocation_timestamp=2020-01-27T15:00:34.751Z, origin=Only For Testing, session_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, session_timestamp=2020-01-27T15:00:34.751Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:36,944Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=f6ecda3f-a408-4453-9a70-f04555a0b37c, invocation_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, invocation_timestamp=2020-01-27T15:00:34.751Z, origin=Only For Testing, session_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, session_timestamp=2020-01-27T15:00:34.751Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:36,952Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=f6ecda3f-a408-4453-9a70-f04555a0b37c, invocation_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, invocation_timestamp=2020-01-27T15:00:34.751Z, origin=Only For Testing, session_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, session_timestamp=2020-01-27T15:00:34.751Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:36,952Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=f6ecda3f-a408-4453-9a70-f04555a0b37c, invocation_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, invocation_timestamp=2020-01-27T15:00:34.751Z, origin=Only For Testing, session_id=ce7eaa51-edce-4a76-8cc2-056bbc3be9f1, session_timestamp=2020-01-27T15:00:34.751Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:37,076Z [Mock network] identity.PersistentIdentityService. - Linking: 0A61EBAC03B1BFE85D81E23E1E0D1E1FB9369C974F895DF2438CA012639F5A53 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551}
[WARN ] 2020-01-27T15:00:37,092Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551}
[WARN ] 2020-01-27T15:00:37,092Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract org.r3.contracts.AssetForAccountContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551}
[INFO ] 2020-01-27T15:00:38,497Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551, tx_id=6B44D9F2B2197DD0382796A546F74BC959CE6353C5B8148585E050CAE51CAD50}
[INFO ] 2020-01-27T15:00:38,497Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551, tx_id=6B44D9F2B2197DD0382796A546F74BC959CE6353C5B8148585E050CAE51CAD50}
[INFO ] 2020-01-27T15:00:38,501Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551, tx_id=6B44D9F2B2197DD0382796A546F74BC959CE6353C5B8148585E050CAE51CAD50}
[INFO ] 2020-01-27T15:00:38,501Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a9b6a712-6ff5-492e-952e-fa02269ba8c7, invocation_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, invocation_timestamp=2020-01-27T15:00:36.900Z, origin=Only For Testing, session_id=74b887b4-b106-4611-ba14-7f2f89a1aef9, session_timestamp=2020-01-27T15:00:36.900Z, thread-id=551, tx_id=6B44D9F2B2197DD0382796A546F74BC959CE6353C5B8148585E050CAE51CAD50}
[INFO ] 2020-01-27T15:00:38,701Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=373e897f-5468-474f-bfa6-eed91a463e30, invocation_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, invocation_timestamp=2020-01-27T15:00:38.646Z, origin=O=Mock Company 2, L=London, C=GB, session_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, session_timestamp=2020-01-27T15:00:38.646Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:38,796Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=373e897f-5468-474f-bfa6-eed91a463e30, invocation_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, invocation_timestamp=2020-01-27T15:00:38.646Z, origin=O=Mock Company 2, L=London, C=GB, session_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, session_timestamp=2020-01-27T15:00:38.646Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:38,811Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=373e897f-5468-474f-bfa6-eed91a463e30, invocation_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, invocation_timestamp=2020-01-27T15:00:38.646Z, origin=O=Mock Company 2, L=London, C=GB, session_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, session_timestamp=2020-01-27T15:00:38.646Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:38,821Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=373e897f-5468-474f-bfa6-eed91a463e30, invocation_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, invocation_timestamp=2020-01-27T15:00:38.646Z, origin=O=Mock Company 2, L=London, C=GB, session_id=a8433e01-ff7a-4ae2-b8aa-d79850440ec3, session_timestamp=2020-01-27T15:00:38.646Z, thread-id=551, tx_id=DC5F35970D04FFF3BC4AEC5A836C90E9018412F72BCDDC5569488EF67FC4DEEF}
[INFO ] 2020-01-27T15:00:39,164Z [Mock network] identity.PersistentIdentityService. - Linking: F767524007824E6A6B962C8C331F1D85047A669A4AE040C8EF47543F315D5E64 to O=Mock Company 2, L=London, C=GB {fiber-id=10000008, flow-id=2930e317-08d9-47ce-8aff-4b9b876528fc, invocation_id=bad7d609-29b5-49c6-aa71-90a56d740349, invocation_timestamp=2020-01-27T15:00:38.962Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bad7d609-29b5-49c6-aa71-90a56d740349, session_timestamp=2020-01-27T15:00:38.962Z, thread-id=551}
[INFO ] 2020-01-27T15:00:39,237Z [Mock network] identity.PersistentIdentityService. - Linking: F767524007824E6A6B962C8C331F1D85047A669A4AE040C8EF47543F315D5E64 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551}
[INFO ] 2020-01-27T15:00:39,420Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=aaab7674-4d7a-4528-83f0-a1b38b15fa6a, invocation_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, invocation_timestamp=2020-01-27T15:00:39.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, session_timestamp=2020-01-27T15:00:39.377Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:39,662Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=aaab7674-4d7a-4528-83f0-a1b38b15fa6a, invocation_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, invocation_timestamp=2020-01-27T15:00:39.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, session_timestamp=2020-01-27T15:00:39.377Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:39,915Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,059Z [Mock network] corda.flow. - Received a notarisation request for Tx [D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000010, flow-id=fb50276d-0860-43cc-a023-52adb590eb8a, invocation_id=d2e1ca8f-f77b-42a2-8a23-12395b854e63, invocation_timestamp=2020-01-27T15:00:40.011Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2e1ca8f-f77b-42a2-8a23-12395b854e63, session_timestamp=2020-01-27T15:00:40.011Z, thread-id=551}
[INFO ] 2020-01-27T15:00:40,254Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [6B44D9F2B2197DD0382796A546F74BC959CE6353C5B8148585E050CAE51CAD50(0)]. TxId: D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56 {}
[INFO ] 2020-01-27T15:00:40,271Z [Mock network] corda.flow. - Transaction [D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000010, flow-id=fb50276d-0860-43cc-a023-52adb590eb8a, invocation_id=d2e1ca8f-f77b-42a2-8a23-12395b854e63, invocation_timestamp=2020-01-27T15:00:40.011Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d2e1ca8f-f77b-42a2-8a23-12395b854e63, session_timestamp=2020-01-27T15:00:40.011Z, thread-id=551}
[INFO ] 2020-01-27T15:00:40,308Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,310Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,340Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,367Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=aaab7674-4d7a-4528-83f0-a1b38b15fa6a, invocation_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, invocation_timestamp=2020-01-27T15:00:39.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, session_timestamp=2020-01-27T15:00:39.377Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,393Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=aaab7674-4d7a-4528-83f0-a1b38b15fa6a, invocation_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, invocation_timestamp=2020-01-27T15:00:39.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, session_timestamp=2020-01-27T15:00:39.377Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,416Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=aaab7674-4d7a-4528-83f0-a1b38b15fa6a, invocation_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, invocation_timestamp=2020-01-27T15:00:39.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, session_timestamp=2020-01-27T15:00:39.377Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,428Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=aaab7674-4d7a-4528-83f0-a1b38b15fa6a, invocation_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, invocation_timestamp=2020-01-27T15:00:39.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=09975a97-b92a-49c2-8ab4-879fa5131e9d, session_timestamp=2020-01-27T15:00:39.377Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,450Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
[INFO ] 2020-01-27T15:00:40,450Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=d4c9c935-bd10-439f-8b85-e9f126a53313, invocation_id=b643988a-7532-4d90-841b-3273141437c1, invocation_timestamp=2020-01-27T15:00:38.903Z, origin=Only For Testing, session_id=b643988a-7532-4d90-841b-3273141437c1, session_timestamp=2020-01-27T15:00:38.903Z, thread-id=551, tx_id=D89DCBA03E8F7DECAB02B02CD9EB3D1963B3DA23F4F5E1966C43419766E4FE56}
